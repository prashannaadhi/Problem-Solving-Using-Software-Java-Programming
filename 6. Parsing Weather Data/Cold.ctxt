#BlueJ class context
comment0.target=Cold
comment0.text=\r\n\ Parsing\ weather\ data\ to\ find\ cold\ weathers\r\n\ @author\ (Prashanna\ Adhikari)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=parser
comment10.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment11.params=
comment11.target=void\ testAverageTemperatureInFile()
comment12.params=parser\ value
comment12.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment13.params=
comment13.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment2.params=currentRow\ coldestSoFar
comment2.target=org.apache.commons.csv.CSVRecord\ getColdestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment3.params=
comment3.target=void\ testcoldestInDay()
comment4.params=
comment4.target=java.lang.String\ fileWithColdestTemperature()
comment5.params=
comment5.target=void\ testFileWithColdestTemp()
comment6.params=parser
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment7.params=
comment7.target=void\ testLowestHumidityInFile()
comment8.params=
comment8.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment9.params=
comment9.target=void\ testLowestHumidityInManyFiles()
numComments=14
